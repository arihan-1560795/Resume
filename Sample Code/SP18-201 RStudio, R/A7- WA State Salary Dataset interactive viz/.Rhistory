comm.by.mem <- lapply(legi.flattened$bioguide_id, function(x) CommitteesServed(x))
comm.by.mem <- lapply(legi.flattened$bioguide_id, function(x) CommitteesServed(x))
comm.by.mem <- bind(lapply(legi.flattened$bioguide_id, function(x) CommitteesServed(x)))
install.packages('knitter')
install.packages('kniter')
install.packages('knitr')
install.packages("knitr")
library(knitr)
kable(legi.flattened$chamber)
kable(legi.flattened)
View(kable(legi.flattened))
View(kable(legi.results))
View(legi.flattened)
library(knitr)?kable
?kable
dist.flattened
View(legi.flattened)
legi.flattened <- legi.flattened(c(first_name, last_name, title, party, chamber, phone, website, twitter_id))
legi.flattened <- legi.flattened(c(first_name, last_name, title, party, chamber, phone, website, twitter_id))
legi.flattened <- legi.flattened[c(first_name, last_name, title, party, chamber, phone, website, twitter_id)]
legi.flattened <- legi.flattened[c('first_name', 'last_name', 'title', 'party', 'chamber', 'phone', 'website', 'twitter_id')]
View(legi.flattened)
legi.flattened <- legi.flattened %>% select('first_name', 'last_name', 'title', 'party', 'chamber', 'phone', 'website', 'twitter_id')
View(legi.flattened)
legi.url <- 'https://congress.api.sunlightfoundation.com/legislators/locate'
legi.response <- GET(legi.url, query = query.params)
legi.body <- content(legi.response, "text")
legi.results <- fromJSON(legi.body)
legi.flattened <- flatten(legi.results$results)
legi.flattened <- legi.flattened %>% select('first_name', 'last_name', 'title', 'party', 'chamber', 'phone', 'website', 'twitter_id')
legi.flattened <- legi.flattened %>% select('first_name', 'last_name', 'title', 'party', 'chamber', 'phone', 'website', 'twitter_id')
View(legi.flattened)
legi.flattened <- legi.flattened %>% select(first_name, last_name, title, party, chamber, phone, website, twitter_id)
View(legi.flattened)
?toupper
gsub("_", " ", legi.flattened)
View(legi.flattened)
legi.flattened
gsub("_", " ", legi.flattened)
colnames(legi.flattened)
install.packages("stringr")
colnames(legi.flattened) <- str_to_title(colnames(legi.flattened))
library(stringr)
colnames(legi.flattened) <- str_to_title(colnames(legi.flattened))
View(legi.flattened)
gsub("_", " ", colnames(legi.flattened))
colnames(legi.flattened) <- gsub("_", " ", colnames(legi.flattened))
colnames(legi.flattened) <- str_to_title(colnames(legi.flattened))
View(legi.flattened)
legi.url <- 'https://congress.api.sunlightfoundation.com/legislators/locate'
legi.response <- GET(legi.url, query = query.params)
legi.body <- content(legi.response, "text")
legi.results <- fromJSON(legi.body)
legi.flattened <- flatten(legi.results$results)
legi.flattened <- legi.flattened %>% select(first_name, last_name, title, party, chamber, phone, website, twitter_id)
legi.flattened %>% select(website)
legi.flattened %>% select(website) %>% mutate(website = paste('[link](', website, ')', sep=""))
View(legi.flattened)
legi.flattened <- legi.flattened %>% select(website) %>%
mutate(website = paste('[link](', website, ')', sep=""))
legi.url <- 'https://congress.api.sunlightfoundation.com/legislators/locate'
legi.response <- GET(legi.url, query = query.params)
legi.body <- content(legi.response, "text")
legi.results <- fromJSON(legi.body)
legi.flattened <- flatten(legi.results$results)
legi.flattened <- legi.flattened %>% select(first_name, last_name, title, party, chamber, phone, website, twitter_id)
legi.flattened <- legi.flattened %>% mutate(website = paste('[link](', website, ')', sep=""))
View(legi.flattened)
colnames(legi.flattened) <- gsub("_", " ", colnames(legi.flattened))
colnames(legi.flattened) <- str_to_title(colnames(legi.flattened))
View(legi.flattened)
legi.flattened <- legi.flattened %>% rename(twitter_id = twitter)
legi.flattened <- legi.flattened %>% rename(c('twitter_id' = 'twitter')
legi.flattened <- legi.flattened %>% mutate(twitter_id = paste('[link](', website, ')', sep=""))
colnames(legi.flattened) <- gsub("_", " ", colnames(legi.flattened))
colnames(legi.flattened) <- str_to_title(colnames(legi.flattened))
View(legi.flattened)
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(flatten(comm.results$results))
}
comm.by.mem <- lapply(legi.flattened$bioguide_id, function(x) CommitteesServed(x))
legi.flattened <- legi.flattened %>% rename(c('twitter_id' = 'twitter')
legi.flattened <- legi.flattened %>% mutate(twitter_id = paste('[link](', website, ')', sep=""))
colnames(legi.flattened) <- gsub("_", " ", colnames(legi.flattened))
colnames(legi.flattened) <- str_to_title(colnames(legi.flattened))
View(legi.flattened)
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(flatten(comm.results$results))
}
comm.by.mem <- lapply(legi.flattened$bioguide_id, function(x) CommitteesServed(x))
legi.url <- 'https://congress.api.sunlightfoundation.com/legislators/locate'
legi.response <- GET(legi.url, query = query.params)
legi.body <- content(legi.response, "text")
legi.results <- fromJSON(legi.body)
legi.flattened <- flatten(legi.results$results)
legi.flattened <- legi.flattened %>% select(first_name, last_name, title, party, chamber, phone, website, twitter_id)
legi.flattened <- legi.flattened %>% mutate(website = paste('[link](', website, ')', sep=""))
legi.flattened <- legi.flattened %>% mutate(twitter_id = paste('[link](https://twitter.com/', twitter_id, ')', sep=""))
View(legi.flattened)
legi.flattened <- rename(legi.flattened, "twitter" = "twitter_id")
legi.flattened <- rename(legi.flattened, twitter = twitter_id)
colnames(legi.flattened) <- gsub("_", " ", colnames(legi.flattened))
colnames(legi.flattened) <- str_to_title(colnames(legi.flattened))
View(legi.flattened)
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(flatten(comm.results$results))
}
comm.by.mem <- lapply(legi.flattened$bioguide_id, function(x) CommitteesServed(x))
legi.results <- fromJSON(legi.body)
legi.flattened.raw <- flatten(legi.results$results)
legi.flattened <- legi.flattened.raw %>% select(first_name, last_name, title, party, chamber, phone, website, twitter_id)
legi.flattened <- legi.flattened %>% mutate(website = paste('[link](', website, ')', sep=""))
legi.flattened <- legi.flattened %>% mutate(twitter_id = paste('[link](https://twitter.com/', twitter_id, ')', sep=""))
legi.flattened <- rename(legi.flattened, twitter = twitter_id)
colnames(legi.flattened) <- gsub("_", " ", colnames(legi.flattened))
colnames(legi.flattened) <- str_to_title(colnames(legi.flattened))
View(legi.flattened)
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
View(comm.by.men)
View(comm.by.mem)
legi.flattened.raw$bioguide_id
id="J000298"
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
comm.results
View(flatten(comm.results$results))
comm.by.min[1]
comm.by.mem[1]
nrow(comm.by.mem[1])
ncol(comm.by.mem[1])
n.col(comm.by.mem[1])
ncol(comm.by.mem[1])
ncol(comm.by.mem[1])
ncol(comm.by.mem[1])
View(comm.by.mem[1])
ncol(comm.by.mem[1])
NCOL(comm.by.mem[1])
NROW(comm.by.mem[1])
ncol(comm.by.mem[1])
length(comm.by.mem[1])
length(comm.by.mem[1])
dimensions(comm.by.mem[1])
(comm.by.mem[1])
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(flatten(comm.results$results))
}
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
(comm.by.mem[1])
NROW(comm.by.mem[1])
NCOL(comm.by.mem[1])
View(comm.by.mem)
View(comm.by.mem[1])
View(comm.by.mem)
nrows(comm.by.mem[1])
nrow(comm.by.mem)
nrow(comm.by.mem(1))
nrow(comm.by.mem[1])
is.data.frame(comm.by.mem[1])
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(as.data.frame(flatten(comm.results$results))
}
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
nrow(comm.by.mem[1])
is.data.frame(comm.by.mem[1])
View(comm.by.mem)
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(as.data.frame(flatten(comm.results$results))
}
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
nrow(comm.by.mem[1])
is.data.frame(comm.by.mem[1])
View(comm.by.mem)
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(as.data.frame(flatten(comm.results$results))
}
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
nrow(comm.by.mem[1])
is.data.frame(comm.by.mem[1])
View(comm.by.mem)
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(as.data.frame(flatten(comm.results$results)))
}
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
nrow(comm.by.mem[1])
is.data.frame(comm.by.mem[1])
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(flatten(comm.results$results))
}
nrow(comm.by.mem[1])
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
nrow(comm.by.mem[1])
row(comm.by.mem[1])
row(comm.by.mem[1])
nrow(comm.by.mem[1])
nrow(comm.by.mem[1,])
nrow(comm.by.mem[1])
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(as.data.frame(flatten(comm.results$results)))
}
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
comm.results <- fromJSON(comm.body)
return(as.data.frame(flatten(comm.results$results)))
}
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
is.data.frame(comm.by.mem[1])
nrow(comm.by.mem[1])
View(legi.flattened)
?bind
comm.by.mem <- bind(lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x)))
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
nrow(comm.by.mem[1])
NROW(comm.by.mem[1])
comm.by.mem[1]
nrow(as.data.frame(comm.by.mem[1])
is.data.frame(comm.by.mem[1])
View(comm.by.mem)
nrow(as.data.frame(comm.by.mem[1])
is.data.frame(comm.by.mem[1])
View(comm.by.mem)
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
return(as.data.frame(fromJSON(comm.body)))
#  comm.results <- fromJSON(comm.body)
#  return(flatten(comm.results$results))
}
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
nrow(comm.by.mem[1])
NROW(comm.by.mem[1])
NROW(comm.by.mem)
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
comm.by.mem
View(comm.by.men)
View(comm.by.mem)
NROW(comm.by.mem)
NROW(comm.by.mem[1])
nrow(comm.by.mem[1])
NROW(comm.by.mem[2])
NCOL(comm.by.mem[2])
NROW(comm.by.mem)
NROW(comm.by.mem)
NROW(comm.by.mem(1))
NROW(comm.by.mem)
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
comm.by.mem[1]
View(comm.by.mem[1])
is.data.frame(comm.by.mem[1])
is.data.frame(comm.by.mem)
is.data.frame(comm.by.mem[1])
is.data.frame(comm.by.mem(1)
NROW(comm.by.mem)
is.data.frame(comm.by.mem(1))
]
is.data.frame(comm.by.mem[[1])
NROW(comm.by.mem)
is.data.frame(comm.by.mem[[2])
NROW(comm.by.mem)
is.data.frame(comm.by.mem[[2]])
NROW(comm.by.mem[[1]])
NROW(comm.by.mem[[2]])
View(comm.by.mem[[1]])
View(legi.flattened)
NROW(comm.by.mem[[2]])
names <- paste(legi.flattened.raw$first_name, " ", legi.flattened.raw$last_name, sep = "")
names
names <- legy.flattened.raw %>% mutate(first_name + last_name)
names <- legi.flattened.raw %>% mutate(first_name + last_name)
names <- legi.flattened.raw %>% mutate(paste(first_name, " ", last_name, sep = ""))
names
View(names)
View(names) <-  mutate(legi.flattened.raw, paste(first_name, " ", last_name, sep = ""))
names <-  mutate(legi.flattened.raw, paste(first_name, " ", last_name, sep = ""))
names
names <-  select(legi.flattened.raw, paste(first_name, " ", last_name, sep = ""))
names <-(legi.flattened.raw, paste(first_name, " ", last_name, sep = ""))
names <- paste(legi.flattened.raw$first_name, " ", legi.flattened.raw$last_name, sep = ""))
names <- paste(legi.flattened.raw$first_name, " ", legi.flattened.raw$last_name, sep = "")
names
View(names)
legi.url <- 'https://congress.api.sunlightfoundation.com/legislators/locate'
legi.response <- GET(legi.url, query = query.params)
legi.body <- content(legi.response, "text")
legi.results <- fromJSON(legi.body)
legi.flattened.raw <- flatten(legi.results$results)
legi.flattened <- legi.flattened.raw %>% select(first_name, last_name, title, party, chamber, phone, website, twitter_id)
legi.flattened <- legi.flattened %>% mutate(website = paste('[link](', website, ')', sep=""))
legi.flattened <- legi.flattened %>% mutate(twitter_id = paste('[link](https://twitter.com/', twitter_id, ')', sep=""))
legi.flattened <- rename(legi.flattened, twitter = twitter_id)
colnames(legi.flattened) <- gsub("_", " ", colnames(legi.flattened))
colnames(legi.flattened) <- str_to_title(colnames(legi.flattened))
names <- paste(legi.flattened.raw$first_name, " ", legi.flattened.raw$last_name, sep = "")
View(names)
no.comm <- lapply(comm.by.mem, NROW)
no.comm
no.comm <- flatten(lapply(comm.by.mem, NROW))
no.comm <- lapply(comm.by.mem, NROW)
View(no.comm)
no.comm <- sapply(comm.by.mem, NROW)
View(no.comm)
barplot(no.comm, main="Car Distribution", horiz=TRUE,
names.arg=names)
barplot(no.comm, main="Committees Served on by Each Rep", horiz=TRUE, names.arg=names)
barplot(no.comm, main="Committees Served on by Each Rep", horiz=TRUE, names.arg=names, decreasing=TRUE)
barplot(no.comm, main="Committees Served on by Each Rep", horiz=TRUE, names.arg=names, order(decreasing = TRUE))
barplot(no.comm, main="Committees Served on by Each Rep", horiz=TRUE, names.arg=names)
zip.code <- '98100'
zip.code <- '98105'
install.packages(httpuv)
install.packages('httpuv')
View(legi.flattened)
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
library(dplyr)
library(jsonlite)
library(httr)
library(knitr)
library(stringr)
zip.code <- '98105'
query.params <- list(zip=zip.code)
dist.url <- 'https://congress.api.sunlightfoundation.com/districts/locate'
dist.response <- GET(dist.url, query = query.params)
dist.body <- content(dist.response, "text")
dist.results <- fromJSON(dist.body)
dist.flattened <- flatten(dist.results$results)
legi.url <- 'https://congress.api.sunlightfoundation.com/legislators/locate'
legi.response <- GET(legi.url, query = query.params)
legi.body <- content(legi.response, "text")
legi.results <- fromJSON(legi.body)
legi.flattened.raw <- flatten(legi.results$results)
legi.flattened <- legi.flattened.raw %>% select(first_name, last_name, title, party, chamber, phone, website, twitter_id)
legi.flattened <- legi.flattened %>% mutate(website = paste('[link](', website, ')', sep=""))
legi.flattened <- legi.flattened %>% mutate(twitter_id = paste('[link](https://twitter.com/', twitter_id, ')', sep=""))
legi.flattened <- rename(legi.flattened, twitter = twitter_id)
colnames(legi.flattened) <- gsub("_", " ", colnames(legi.flattened))
colnames(legi.flattened) <- str_to_title(colnames(legi.flattened))
View(legi.flattened)
CommitteesServed <- function(id){
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(member_ids = id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
return(as.data.frame(fromJSON(comm.body)))
#  comm.results <- fromJSON(comm.body)
#  return(flatten(comm.results$results))
}
comm.by.mem <- lapply(legi.flattened.raw$bioguide_id, function(x) CommitteesServed(x))
names <- paste(legi.flattened.raw$first_name, " ", legi.flattened.raw$last_name, sep = "")
View(comm.by.mem[[1]])
barplot(no.comm, main="Committees Served on by Each Rep", horiz=TRUE, names.arg=names)
comm.by.mem[[1]] %>% filter(results.subcommittee == FALSE)
comm.by.mem[[1]] %>% filter(results.subcommittee == FALSE) %>% top_n(1)
comm.by.mem[[1]] %>% filter(results.subcommittee == FALSE) %>% top_n(0)
comm.by.mem[[1]] %>% filter(results.subcommittee == FALSE) %>% top_n(1)
comm.by.mem[[1]] %>% filter(results.subcommittee == FALSE) %>%  filter(row_number()==1)
names[1]
i = 1
comm = NULL
while(isNull(comm)){
comm <- comm.by.mem[[i]] %>% filter(results.subcommittee == FALSE) %>%  filter(row_number()==1)
i = i + 1
}
while(comm == NULL){
comm <- comm.by.mem[[i]] %>% filter(results.subcommittee == FALSE) %>%  filter(row_number()==1)
i = i + 1
}
while(is.null(comm)){
comm <- comm.by.mem[[i]] %>% filter(results.subcommittee == FALSE) %>%  filter(row_number()==1)
i = i + 1
}
i = 0
comm = NULL
while(is.null(comm)){
i = i + 1
comm <- comm.by.mem[[i]] %>% filter(results.subcommittee == FALSE) %>%  filter(row_number()==1)
}
rep.name <- names[i]
com.name <- comm$results.committee_id
com.name
rep.name
com.id <- comm$results.committee_id
comm.id <- comm$results.committee_id
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(committee_id <- comm.id)
comm.response <- GET(comm.url, query = comm.query.params)
comm.body <- content(comm.response, "text")
body <- fromJSON(content(comm.body,"text"))$results$members[[1]] %>% flatten()
comm.df <- fromJSON(content(comm.body,"text"))$results$members[[1]] %>% flatten()
comm.body <- content(comm.response, "text")
View(comm.body)
comm.df <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
comm <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
comm.response <- GET(comm.url, query = comm.query.params)
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
body <- fromJSON(content(as.data.frame(comm.response),"text"))$results$members[[1]] %>% flatten()
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
library(jsonlite)
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
comm.response
comm.id
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(committee_id <- comm.id)
comm.response <- GET(comm.url, query = comm.query.params)
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
comm.query.params <- list(committee_id <- comm.id)
comm.response <- GET(comm.url, query = comm.query.params)
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
comm.query.params <- list(committee_id = comm.id)
comm.response <- GET(comm.url, query = comm.query.params)
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
comm.query.params <- list(committee_id = comm.id)
comm.response <- GET(comm.url, query = comm.query.params)
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
comm.url <- 'https://congress.api.sunlightfoundation.com/committees?'
comm.query.params <- list(committee_id = comm.id)
comm.response <- GET(comm.url, query = comm.query.params)
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
comm.query.params <- list(committee_id = 'HSJU')
comm.response <- GET(comm.url, query = comm.query.params)
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
comm.query.params <- list(committee_id = comm.id)
comm.response <- GET(comm.url, query = comm.query.params)
body <- fromJSON(content(comm.response,"text"))$results$members[[1]] %>% flatten()
install.packages('rsconnect')
install.packages('shiny')
rsconnect::setAccountInfo(name='arihan',
token='FFAADF0969D439FCE84850C7FAFD0E23',
secret='<SECRET>')
rsconnect::setAccountInfo(name='arihan',
token='FFAADF0969D439FCE84850C7FAFD0E23',
secret='<SECRET>')
rsconnect::setAccountInfo(name='arihan',
token='FFAADF0969D439FCE84850C7FAFD0E23',
secret='Ln+pu/sx7Bo/WqihKwhc7PKH8uRpUsyN7TmZa4rD')
shiny::runApp('GitHub/m18-shiny/demo-1')
library(dplyr)
library(plotly)
library(shiny)
setwd('~/GitHub/finalWageProject')
wage.df <- read.csv('data/annualsalary.csv', stringsAsFactors = FALSE)
group.df <- wage.df %>% group_by(Agency_Title)
group.df <- group.df %>% mutate(test1 = select(as.numeric(gsub(",", "", .)), starts_with("Sal")))
library(dplyr)
library(plotly)
library(shiny)
setwd('~/GitHub/finalWageProject')
wage.df <- read.csv('data/annualsalary.csv', stringsAsFactors = FALSE)
name.vec <- unlist(strsplit(toUpper("STUART REGES"), split=" "))
name.vec <- unlist(strsplit(toUpper("STUART REGES"), split=" "))
library(stringr)
name.vec <- unlist(strsplit(toUpper("STUART REGES"), split=" "))
name.vec <- unlist(strsplit(toUpper("stuart REGES"), split=" "))
name.vec <- unlist(strsplit(toUpper('aa'), split=" "))
